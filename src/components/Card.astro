---
// @ts-nocheck
const { id, images, actions } = Astro.props
import { Button, PhotoGallery, Spacer } from '.'
import visitIcon from '../assets/icons/visit.png'
import gitHubIcon from '../assets/icons/github-logo.svg'
---

<section id={id} class="card-container">
  {images?.length && (
    <PhotoGallery images={images} alignImages="top" client:load />
    <Spacer size="xs" />
  )}
  
  <slot />

  {actions?.length && (
    <Spacer size="xs" />
    <div style={{ flexGrow: 1 }} />
    <div class="card-actions">
      {actions?.map((action) => (
        <Button
          emphasis="medium"
          icon={Object.keys(action) == 'GitHub' ? gitHubIcon : visitIcon}
          iconSize="sm"
          to={Object.values(action)}
          target={Object.values(action).toString().startsWith('/') ? '_self' : '_blank'}
          client:load
        >
          {Object.keys(action)}
        </Button>
      ))}
    </div>
  )}
</section>

<style lang="scss">
  .card-container {
    display: flex;
    flex-direction: column;
    background: var(--foreground-transparent);
    padding: 16px;
    border-radius: var(--border-rad);
    scroll-margin-top: 150px;
  }

  .card-actions {
    display: flex;
    flex-direction: row;
    gap: 8px;
  }

  .linked-card {
    outline: 2px solid var(--accent);
    box-shadow: 0px 4px 10px var(--accent);
    animation: flash 600ms ease-in-out 2;
  }

  @keyframes flash {
    0%, 100% {
      outline: 2px solid var(--accent);
      box-shadow: 0px 4px 10px var(--accent);
    }
    50% {
      outline: none;
      box-shadow: none;
    }
  }
</style>

<script is:inline define:vars={{ id }}>
  const urlHash = window.location.hash.slice(1)
  if (urlHash === id) {
    const cardElement = document.getElementById(id)
    cardElement.classList.add('linked-card')
  }
</script>